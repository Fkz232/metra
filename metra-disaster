local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "YTB: Zuesz",
    SubTitle = "Beta Version",
    TabWidth = 160,
    Size = UDim2.fromOffset(530, 350),
    Acrylic = true,
    Theme = "Rose",
    MinimizeKey = Enum.KeyCode.End
})

local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Stats = Window:AddTab({ Title = "Stats", Icon = "" }),
    Player = Window:AddTab({ Title = "Player", Icon = "" }),
    Teleport = Window:AddTab({ Title = "Island", Icon = "" }),
    Fruit = Window:AddTab({ Title = "Fruit", Icon = "" }),
    Raid = Window:AddTab({ Title = "Raid", Icon = "" }),
    Race = Window:AddTab({ Title = "Race V4", Icon = "" }),
    Shop = Window:AddTab({ Title = "Shop", Icon = "" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "" }),
    Hop = Window:AddTab({ Title = "Hop", Icon = "" }),
    Setting = Window:AddTab({ Title = "Setting", Icon = "" }),
}

-- Função para obter o nome de usuário e informações da conta
local function getAccountInfo()
    local player = game.Players.LocalPlayer
    local userName = player.Name
    local accountAge = player.AccountAge
    local isOnline = player.UserId > 0
    local friendCount = #player.Friends
    local ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    local avatar = player.Character and player.Character:FindFirstChild("Head") and player.Character.Head:FindFirstChild("face")
    local avatarTexture = avatar and avatar.TextureId or ""

    return {
        userName = userName,
        accountAge = accountAge,
        isOnline = isOnline,
        friendCount = friendCount,
        ping = ping,
        avatar = avatarTexture
    }
end

-- Função para exibir as informações no tab "Main"
local function displayAccountInfo()
    local accountInfo = getAccountInfo()

    -- Adiciona as labels na interface
    Tabs.Main:ClearAllChildren()  -- Limpa qualquer conteúdo antigo antes de adicionar as novas informações
    Tabs.Main:AddLabel({ Text = "Nome: " .. accountInfo.userName })
    Tabs.Main:AddLabel({ Text = "Idade da Conta: " .. accountInfo.accountAge .. " dias" })
    Tabs.Main:AddLabel({ Text = "Amigos: " .. accountInfo.friendCount })
    Tabs.Main:AddLabel({ Text = "Status: " .. (accountInfo.isOnline and "Online" or "Offline") })
    Tabs.Main:AddLabel({ Text = "Ping: " .. accountInfo.ping })

    -- Adiciona a imagem do avatar, se houver
    if accountInfo.avatar ~= "" then
        local avatarImage = Instance.new("ImageLabel")
        avatarImage.Size = UDim2.new(0, 50, 0, 50)
        avatarImage.Position = UDim2.new(0, 10, 0, 100)
        avatarImage.Image = accountInfo.avatar
        avatarImage.Parent = Tabs.Main.Content
    end
end

-- Exibe as informações de conta inicialmente
displayAccountInfo()

-- Adiciona uma opção de refrescar os dados
Tabs.Main:AddButton({
    Text = "Refresh Account Info",
    Callback = function()
        displayAccountInfo()  -- Atualiza as labels com as novas informações
    end
})
