local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
local Window = Fluent:CreateWindow({
    Title = "Disaster Metra",
    SubTitle = "Versão Beta",
    TabWidth = 160,
    Size = UDim2.fromOffset(530, 350),
    Acrylic = true,
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.End
})

local Tabs = {
    Main = Window:AddTab({ Title = "Principal", Icon = "" }),
    Stats = Window:AddTab({ Title = "Estatísticas", Icon = "" }),
    Player = Window:AddTab({ Title = "Jogador", Icon = "" }),
    Teleport = Window:AddTab({ Title = "Teleportar", Icon = "" }),
    GamePass = Window:AddTab({ Title = "GamePasses", Icon = "" }),
    Misc = Window:AddTab({ Title = "Diversos", Icon = "" }),
    Setting = Window:AddTab({ Title = "Configurações", Icon = "" }),
}

local Options = Fluent.Options

local dragging = false
local dragInput = nil
local dragStart = nil
local startPos = nil

Window.Frame.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = Window.Frame.Position
    end
end)

Window.Frame.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.Touch then
        local delta = input.Position - dragStart
        Window.Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

Window.Frame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Touch then
        dragging = false
    end
end)

Tabs.Player:AddLabel({
    Text = "Digite o Nick do jogador para teleportar",
    TextColor3 = Color3.fromRGB(255, 0, 0)
})

local PlayerNickTextBox = Tabs.Player:AddTextbox({
    PlaceholderText = "Digite o Nick...",
    ClearTextOnFocus = true,
})

Tabs.Player:AddButton({
    Text = "Teleportar para o Jogador",
    Callback = function()
        local Nick = PlayerNickTextBox.Text
        if Nick and Nick ~= "" then
            local targetPlayer = game.Players:FindFirstChild(Nick)
            if targetPlayer then
                local targetPosition = targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                if targetPosition then
                    game.Players.LocalPlayer.Character:MoveTo(targetPosition.Position)
                    print("Teleportado para " .. Nick)
                else
                    warn("O jogador não tem um HumanoidRootPart!")
                end
            else
                warn("Jogador não encontrado!")
            end
        else
            warn("Digite um nome válido!")
        end
    end,
    TextColor3 = Color3.fromRGB(255, 255, 0)
})

Tabs.Stats:AddButton({
    Text = "Mostrar Estatísticas",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local StatsWindow = Fluent:CreateWindow({
            Title = "Estatísticas do Jogador",
            SubTitle = "",
            TabWidth = 160,
            Size = UDim2.fromOffset(400, 300),
            Acrylic = true,
            Theme = "Dark",
        })

        local PingLabel = StatsWindow:AddLabel({
            Text = "Ping: " .. tostring(Player:Ping()) .. "ms",
            TextColor3 = Color3.fromRGB(0, 255, 255)
        })
        
        local AvatarImage = StatsWindow:AddImage({
            Image = "https://www.roblox.com/headshot-thumbnail/image?userId=" .. Player.UserId .. "&width=420&height=420&format=png",
            Size = UDim2.fromOffset(100, 100)
        })
        
        local PlayerName = StatsWindow:AddLabel({
            Text = "Nome: " .. Player.Name,
            TextColor3 = Color3.fromRGB(255, 255, 255)
        })
        
        local AccountAge = StatsWindow:AddLabel({
            Text = "Data de criação da conta: " .. tostring(Player.AccountAge) .. " dias atrás",
            TextColor3 = Color3.fromRGB(255, 0, 255)
        })
        
        local FriendCount = StatsWindow:AddLabel({
            Text = "Amigos: " .. tostring(#Player.Friends),
            TextColor3 = Color3.fromRGB(0, 255, 0)
        })
        
        local Status = StatsWindow:AddLabel({
            Text = "Status: " .. (Player.Status == Enum.PlayerStatus.Online and "Online" or "Offline"),
            TextColor3 = Color3.fromRGB(255, 165, 0)
        })
        
        local UpdatePing = game:GetService("RunService").Heartbeat:Connect(function()
            PingLabel.Text = "Ping: " .. tostring(Player:Ping()) .. "ms"
        end)
    end,
    TextColor3 = Color3.fromRGB(255, 255, 0)
})

Tabs.GamePass:AddButton({
    Text = "Balão",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local BalloonTool = Instance.new("Tool")
        BalloonTool.Name = "Balão"
        BalloonTool.RequiresHandle = true
        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 1, 1)
        handle.Anchored = true
        handle.CanCollide = false
        handle.Parent = BalloonTool
        BalloonTool.Parent = Player.Backpack
        print("Balão adicionado ao seu inventário!")
    end,
    TextColor3 = Color3.fromRGB(255, 255, 255)
})

Tabs.GamePass:AddButton({
    Text = "Maçã",
    Callback = function()
        local Player = game.Players.LocalPlayer
        local AppleTool = Instance.new("Tool")
        AppleTool.Name = "Maçã"
        AppleTool.RequiresHandle = true
        local handle = Instance.new("Part")
        handle.Name = "Handle"
        handle.Size = Vector3.new(1, 1, 1)
        handle.Anchored = true
        handle.CanCollide = false
        handle.Parent = AppleTool
        AppleTool.Parent = Player.Backpack
        print("Maçã adicionada ao seu inventário!")
    end,
    TextColor3 = Color3.fromRGB(255, 0, 0)
})

function AntiBan()
    for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
        if v:IsA("LocalScript") then
            if v.Name == "General" or v.Name == "Shiftlock"  or v.Name == "FallDamage" or v.Name == "4444" or v.Name == "CamBob" or v.Name == "JumpCD" or v.Name == "Looking" or v.Name == "Run" then
                v:Destroy()
            end
        end
    end
    for i,v in pairs(game:GetService("Players").LocalPlayer.PlayerScripts:GetDescendants()) do
        if v:IsA("LocalScript") then
            if v.Name == "RobloxMotor6DBugFix" or v.Name == "Clans"  or v.Name == "Codes" or v.Name == "CustomForceField" or v.Name == "MenuBloodSp"  or v.Name == "PlayerList" then
                v:Destroy()
            end
        end
    end
end

AntiBan()

game:GetService("Players").LocalPlayer.Idled:connect(function()
    game:GetService("VirtualUser"):Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    wait(1)
    game:GetService("VirtualUser"):Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

Tabs.Teleport:AddButton({
    Text = "Teleportar para o Spawn",
    Callback = function()
        local spawnLocation = CFrame.new(0, 100, 0)
        game.Players.LocalPlayer.Character:MoveTo(spawnLocation)
        print("Teleportado para o Spawn.")
    end,
    TextColor3 = Color3.fromRGB(255, 165, 0)
})

Tabs.Teleport:AddButton({
    Text = "Teleportar para o local dos desastres",
    Callback = function()
        local disasterLocation = CFrame.new(50, 100, 50)
        game.Players.LocalPlayer.Character:MoveTo(disasterLocation)
        print("Teleportado para o local dos desastres.")
    end,
    TextColor3 = Color3.fromRGB(0, 255, 255)
})
